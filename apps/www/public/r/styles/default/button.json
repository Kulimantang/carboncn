{
  "name": "button",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/button.tsx",
      "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"whitespace-nowrap text-sm font-medium ring-inset focus:outline-none disabled:cursor-not-allowed border-transparent focus:ring-1 border focus:ring-offset-1 disabled:bg-cds-button-disabled disabled:text-cds-text-disabled disabled:border-cds-border-disabled focus:ring-offset-cds-focus focus:border-cds-focus focus:ring-cds-focus-inset inline-flex items-center\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-cds-button-primary text-cds-text-on-color hover:bg-cds-button-primary-hover  active:bg-cds-button-primary-active\",\n        destructive:\n          \"bg-cds-button-danger  text-cds-text-on-color hover:bg-cds-button-danger-hover active:bg-cds-button-danger-active \",\n        \"danger--tertiary\":\n          \"bg-cds-background focus:bg-cds-button-danger focus:text-cds-text-on-color text-cds-button-danger-secondary hover:text-cds-text-on-color border-cds-button-danger-secondary hover:bg-cds-button-danger-hover active:bg-cds-button-danger-active hover:border-cds-button-danger  focus:hover:border-cds-button-danger-hover\",\n        outline:\n          \"bg-transparent border-cds-button-tertiary text-cds-button-tertiary hover:bg-cds-button-tertiary-hover hover:border-cds-button-tertiary-hover active:bg-cds-button-tertiary-active hover:text-cds-text-inverse focus:text-cds-text-inverse focus:bg-cds-button-tertiary\",\n        secondary:\n          \"bg-cds-button-secondary border-cds-button-secondary text-cds-text-on-color hover:bg-cds-button-secondary-hover hover:border-cds-button-secondary-hover active:bg-cds-button-secondary-active\",\n        ghost:\n          \"bg-transparent border-transparent text-cds-link-primary hover:text-cds-link-primary-hover hover:bg-cds-background-hover active:bg-cds-background-active\",\n        link: \"\",\n        dropdown:\n          \"border-transparent text-cds-text-primary box-border flex h-10 w-full rounded-none border-b border-b-cds-border-strong bg-cds-field px-4 py-2 text-sm outline-cds-focus file:border-0 file:bg-transparent  file:text-sm file:font-medium disabled:cursor-not-allowed disabled:opacity-50 hover:bg-cds-field-hover\",\n      },\n      size: {\n        default: \"h-12 px-4 py-[14px] pl-[15px] pr-[63px]\",\n        sm: \"h-9 px-3\",\n        lg: \"h-16 px-4 pt-[14px] pb-8\",\n        icon: \"h-12 w-12 p-2 flex items-center justify-center\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}